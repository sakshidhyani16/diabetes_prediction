# -*- coding: utf-8 -*-
"""diabetes_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Zq36pZijYtvJzpu_0jiO8sAw0i354jO8
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

dataset = pd.read_csv("diabetes.csv")

#getting 5 rows of the dataset
dataset.head()

#getting the total number of rows and collumn of the dataset
dataset.shape

#getting statstical view of dataset
dataset.describe()

# seperating data and labels
x = dataset.drop(columns = "Outcome", axis = 1)
y = dataset['Outcome']

print(x)

print(y)

#standarlizing the data
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
sc.fit_transform(x)

from sklearn.model_selection import train_test_split
train_x, test_x , train_y, test_y = train_test_split(x,y,test_size = 0.2, random_state = 2)

print(train_x)

from sklearn.svm import SVC
classifier = SVC(kernel = 'linear')
classifier.fit(train_x,train_y)

print(y_pred)

y_pred = classifier.predict(test_x)

from sklearn.metrics import  accuracy_score
print(accuracy_score(test_y, y_pred))

x_pred = classifier.predict(test_x)

print(accuracy_score(test_x, x_pred))

input_data = (4,111,72,47,207,37.1,1.39,56)
input_data = np.asarray(input_data)
input_reshaped = input_data.reshape(1,-1)
print('reshaped',input_reshaped)
std_data = sc.transform(input_reshaped)
print('standralized',std_data)
prediction = classifier.predict(std_data)
print('prediction',prediction)
if(prediction[0]==0):
  print("person does not have dibetes")
else:
  print("person have dibetes")